
//Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
//--------------------------------------------------------------------------------
//Tool Version: Vivado v.2018.2 (win64) Build 2258646 Thu Jun 14 20:03:12 MDT 2018
//Date        : Thu Jun 27 18:47:24 2024
//Host        : DESKTOP-II5BP1H running 64-bit major release  (build 9200)
//Command     : generate_target design_1.bd
//Design      : design_1
//Purpose     : IP block netlist
//--------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CORE_GENERATION_INFO = "design_1,IP_Integrator,{x_ipVendor=xilinx.com,x_ipLibrary=BlockDiagram,x_ipName=design_1,x_ipVersion=1.00.a,x_ipLanguage=VERILOG,numBlks=16,numReposBlks=13,numNonXlnxBlks=0,numHierBlks=3,maxHierDepth=1,numSysgenBlks=0,numHlsBlks=0,numHdlrefBlks=4,numPkgbdBlks=0,bdsource=USER,synth_mode=OOC_per_IP}" *) (* HW_HANDOFF = "design_1.hwdef" *) 
module design_1
   (a,
    b,
    cin,
    s);
  input [3:0]a;
  input [3:0]b;
  input cin;
  output [4:0]s;

  wire PRAC_0_c;
  wire PRAC_0_s;
  wire PRAC_1_s;
  wire PRAC_2_s;
  wire PRAC_3_s;
  wire [3:0]a_1;
  wire [3:0]b_1;
  wire cin_0_1;
  wire [4:0]xlconcat_0_dout;
  wire [0:0]xlslice_0_Dout;
  wire [0:0]xlslice_1_Dout;
  wire [0:0]xlslice_2_Dout;
  wire [0:0]xlslice_3_Dout;
  wire [0:0]xlslice_4_Dout;
  wire [0:0]xlslice_5_Dout;
  wire [0:0]xlslice_6_Dout;
  wire [0:0]xlslice_7_Dout;

  assign a_1 = a[3:0];
  assign b_1 = b[3:0];
  assign cin_0_1 = cin;
  assign s[4:0] = xlconcat_0_dout;
  hier_0_imp_MHUNTD hier_0
       (.Dout(xlslice_0_Dout),
        .Dout1(xlslice_1_Dout),
        .Dout2(xlslice_2_Dout),
        .Dout3(xlslice_3_Dout),
        .a(a_1));
  hier_1_imp_JJAEZ6 hier_1
       (.Dout(xlslice_4_Dout),
        .Dout1(xlslice_5_Dout),
        .Dout2(xlslice_6_Dout),
        .Dout3(xlslice_7_Dout),
        .b(b_1));
  hier_2_imp_ZHJ3IV hier_2
       (.a(xlslice_3_Dout),
        .a1(xlslice_2_Dout),
        .a2(xlslice_1_Dout),
        .a3(xlslice_0_Dout),
        .b(xlslice_7_Dout),
        .b1(xlslice_6_Dout),
        .b2(xlslice_5_Dout),
        .b3(xlslice_4_Dout),
        .c(PRAC_0_c),
        .cin(cin_0_1),
        .s(PRAC_0_s),
        .s1(PRAC_1_s),
        .s2(PRAC_2_s),
        .s3(PRAC_3_s));
  design_1_xlconcat_0_0 xlconcat_0
       (.In0(PRAC_3_s),
        .In1(PRAC_2_s),
        .In2(PRAC_1_s),
        .In3(PRAC_0_s),
        .In4(PRAC_0_c),
        .dout(xlconcat_0_dout));
endmodule

module hier_0_imp_MHUNTD
   (Dout,
    Dout1,
    Dout2,
    Dout3,
    a);
  output [0:0]Dout;
  output [0:0]Dout1;
  output [0:0]Dout2;
  output [0:0]Dout3;
  input [3:0]a;

  wire [3:0]a_1;
  wire [0:0]xlslice_0_Dout;
  wire [0:0]xlslice_1_Dout;
  wire [0:0]xlslice_2_Dout;
  wire [0:0]xlslice_3_Dout;

  assign Dout[0] = xlslice_0_Dout;
  assign Dout1[0] = xlslice_1_Dout;
  assign Dout2[0] = xlslice_2_Dout;
  assign Dout3[0] = xlslice_3_Dout;
  assign a_1 = a[3:0];
  design_1_xlslice_0_0 xlslice_0
       (.Din(a_1),
        .Dout(xlslice_0_Dout));
  design_1_xlslice_0_1 xlslice_1
       (.Din(a_1),
        .Dout(xlslice_1_Dout));
  design_1_xlslice_0_2 xlslice_2
       (.Din(a_1),
        .Dout(xlslice_2_Dout));
  design_1_xlslice_0_3 xlslice_3
       (.Din(a_1),
        .Dout(xlslice_3_Dout));
endmodule

module hier_1_imp_JJAEZ6
   (Dout,
    Dout1,
    Dout2,
    Dout3,
    b);
  output [0:0]Dout;
  output [0:0]Dout1;
  output [0:0]Dout2;
  output [0:0]Dout3;
  input [3:0]b;

  wire [3:0]b_1;
  wire [0:0]xlslice_4_Dout;
  wire [0:0]xlslice_5_Dout;
  wire [0:0]xlslice_6_Dout;
  wire [0:0]xlslice_7_Dout;

  assign Dout[0] = xlslice_4_Dout;
  assign Dout1[0] = xlslice_5_Dout;
  assign Dout2[0] = xlslice_6_Dout;
  assign Dout3[0] = xlslice_7_Dout;
  assign b_1 = b[3:0];
  design_1_xlslice_0_4 xlslice_4
       (.Din(b_1),
        .Dout(xlslice_4_Dout));
  design_1_xlslice_1_0 xlslice_5
       (.Din(b_1),
        .Dout(xlslice_5_Dout));
  design_1_xlslice_2_0 xlslice_6
       (.Din(b_1),
        .Dout(xlslice_6_Dout));
  design_1_xlslice_3_0 xlslice_7
       (.Din(b_1),
        .Dout(xlslice_7_Dout));
endmodule

module hier_2_imp_ZHJ3IV
   (a,
    a1,
    a2,
    a3,
    b,
    b1,
    b2,
    b3,
    c,
    cin,
    s,
    s1,
    s2,
    s3);
  input a;
  input a1;
  input a2;
  input a3;
  input b;
  input b1;
  input b2;
  input b3;
  output c;
  input cin;
  output s;
  output s1;
  output s2;
  output s3;

  wire PRAC_0_c;
  wire PRAC_0_s;
  wire PRAC_1_c;
  wire PRAC_1_s;
  wire PRAC_2_c;
  wire PRAC_2_s;
  wire PRAC_3_c;
  wire PRAC_3_s;
  wire cin_0_1;
  wire xlslice_0_Dout;
  wire xlslice_1_Dout;
  wire xlslice_2_Dout;
  wire xlslice_3_Dout;
  wire xlslice_4_Dout;
  wire xlslice_5_Dout;
  wire xlslice_6_Dout;
  wire xlslice_7_Dout;

  assign c = PRAC_0_c;
  assign cin_0_1 = cin;
  assign s = PRAC_0_s;
  assign s1 = PRAC_1_s;
  assign s2 = PRAC_2_s;
  assign s3 = PRAC_3_s;
  assign xlslice_0_Dout = a3;
  assign xlslice_1_Dout = a2;
  assign xlslice_2_Dout = a1;
  assign xlslice_3_Dout = a;
  assign xlslice_4_Dout = b3;
  assign xlslice_5_Dout = b2;
  assign xlslice_6_Dout = b1;
  assign xlslice_7_Dout = b;
  design_1_PRAC_0_0 PRAC_0
       (.a(xlslice_3_Dout),
        .b(xlslice_7_Dout),
        .c(PRAC_0_c),
        .cin(PRAC_1_c),
        .s(PRAC_0_s));
  design_1_PRAC_0_1 PRAC_1
       (.a(xlslice_2_Dout),
        .b(xlslice_6_Dout),
        .c(PRAC_1_c),
        .cin(PRAC_2_c),
        .s(PRAC_1_s));
  design_1_PRAC_0_2 PRAC_2
       (.a(xlslice_1_Dout),
        .b(xlslice_5_Dout),
        .c(PRAC_2_c),
        .cin(PRAC_3_c),
        .s(PRAC_2_s));
  design_1_PRAC_0_3 PRAC_3
       (.a(xlslice_0_Dout),
        .b(xlslice_4_Dout),
        .c(PRAC_3_c),
        .cin(cin_0_1),
        .s(PRAC_3_s));
endmodule
